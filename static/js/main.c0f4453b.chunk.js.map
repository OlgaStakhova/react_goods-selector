{"version":3,"sources":["goods.js","App.tsx","index.tsx"],"names":["App","state","selectedGood","goods","goodsFromServer","isActive","good","includes","unselectGoodHandler","setState","filter","el","clearSelectedGoods","getHeaderTitle","lengthSelected","length","selectedWithoutLastElement","lastSelected","pop","join","selectGoodHandler","this","className","type","onClick","map","cn","uniqid","Component","ReactDOM","render","document","getElementById"],"mappings":"8QAAe,GACb,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,U,OCGWA,EAAb,4MACEC,MAAyB,CACvBC,aAAc,CAAC,OACfC,MAAM,YAAKC,IAHf,EAMEC,SAAW,SAACC,GACV,OAAO,EAAKL,MAAMC,aAAaK,SAASD,IAP5C,EAUEE,oBAAsB,SAACF,GAAD,OACpB,EAAKG,UAAS,kBAAuB,CACnCP,aADY,EAAGA,aACYQ,QAAO,SAAAC,GAAE,OAAIA,IAAOL,UAZrD,EAgBEM,mBAAqB,WACnB,EAAKH,SAAS,CACZP,aAAc,MAlBpB,EAsBEW,eAAiB,WACf,IAAMC,EAAiB,EAAKb,MAAMC,aAAaa,OAE/C,IAAKD,EACH,MAAO,oBAGT,GAAuB,IAAnBA,EACF,MAAM,GAAN,OAAU,EAAKb,MAAMC,aAAa,GAAlC,gBAGF,IAAMc,EAA0B,YAAO,EAAKf,MAAMC,cAE5Ce,EAAeD,EAA2BE,MAEhD,MAAM,GAAN,OAAUF,EAA2BG,KAAK,MAA1C,gBAAuDF,EAAvD,kBArCJ,EAwCEG,kBAAoB,SAACd,GACnB,EAAKG,UAAS,gBAAGP,EAAH,EAAGA,aAAH,MAAuB,CACnCA,aAAa,GAAD,mBAAMA,GAAN,CAAoBI,SA1CtC,4CA8CE,WAAU,IAAD,OACCJ,EAAiBmB,KAAKpB,MAAtBC,aAER,OACE,uBAAMoB,UAAU,MAAhB,UACE,yBAAQA,UAAU,cAAlB,UACE,oBAAIA,UAAU,aAAd,SACID,KAAKR,mBAEPX,EAAaa,OAAS,GACtB,wBACEQ,KAAK,SACLD,UAAU,uCACVE,QAAS,kBAAM,EAAKZ,sBAHtB,sBAUJ,oBAAIU,UAAU,UAAd,SACGD,KAAKpB,MAAME,MAAMsB,KAAI,SAAAnB,GACpB,IAAMD,EAAW,EAAKA,SAASC,GAE/B,OACE,qBAEEgB,UAAWI,IACT,OACA,QACA,CAAE,eAAgBrB,IALtB,UAQGC,EACCD,EAEE,wBACEkB,KAAK,SACLD,UAAU,0CACVE,QAAS,WACP,EAAKhB,oBAAoBF,IAJ7B,oBAWA,wBACEiB,KAAK,SACLD,UAAU,0CACVE,QAAS,WACP,EAAKJ,kBAAkBd,IAJ3B,sBArBCqB,mBAxErB,GAAyBC,aCVzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c0f4453b.chunk.js","sourcesContent":["export default [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import { Component } from 'react';\nimport './App.scss';\nimport uniqid from 'uniqid';\nimport 'bulma/css/bulma.min.css';\n\nimport cn from 'classnames';\nimport goodsFromServer from './goods';\n\ntype State = {\n  selectedGood: string[];\n  goods: string[];\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGood: ['Jam'],\n    goods: [...goodsFromServer],\n  };\n\n  isActive = (good: string) => {\n    return this.state.selectedGood.includes(good);\n  };\n\n  unselectGoodHandler = (good: string) => (\n    this.setState(({ selectedGood }) => ({\n      selectedGood: selectedGood.filter(el => el !== good),\n    }))\n  );\n\n  clearSelectedGoods = () => {\n    this.setState({\n      selectedGood: [],\n    });\n  };\n\n  getHeaderTitle = (): string => {\n    const lengthSelected = this.state.selectedGood.length;\n\n    if (!lengthSelected) {\n      return 'No goods selected';\n    }\n\n    if (lengthSelected === 1) {\n      return `${this.state.selectedGood[0]} is selected`;\n    }\n\n    const selectedWithoutLastElement = [...this.state.selectedGood];\n\n    const lastSelected = selectedWithoutLastElement.pop();\n\n    return `${selectedWithoutLastElement.join(', ')} and ${lastSelected} are selected`;\n  };\n\n  selectGoodHandler = (good: string): void => {\n    this.setState(({ selectedGood }) => ({\n      selectedGood: [...selectedGood, good],\n    }));\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"App\">\n        <header className=\"App__header\">\n          <h1 className=\"App__title\">\n            { this.getHeaderTitle() }\n          </h1>\n          {(selectedGood.length > 0) && (\n            <button\n              type=\"button\"\n              className=\"App__clear button is-danger is-light\"\n              onClick={() => this.clearSelectedGoods()}\n            >\n              Clear\n            </button>\n          )}\n        </header>\n\n        <ul className=\"content\">\n          {this.state.goods.map(good => {\n            const isActive = this.isActive(good);\n\n            return (\n              <li\n                key={uniqid()}\n                className={cn(\n                  'Good',\n                  'level',\n                  { 'good--active': isActive },\n                )}\n              >\n                {good}\n                { isActive\n                  ? (\n                    <button\n                      type=\"button\"\n                      className=\"good__remove button is-warning is-light\"\n                      onClick={() => {\n                        this.unselectGoodHandler(good);\n                      }}\n                    >\n                      Remove\n                    </button>\n                  )\n                  : (\n                    <button\n                      type=\"button\"\n                      className=\"good__select button is-success is-light\"\n                      onClick={() => {\n                        this.selectGoodHandler(good);\n                      }}\n                    >\n                      Select\n                    </button>\n                  )}\n\n              </li>\n            );\n          })}\n        </ul>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}