{"version":3,"sources":["goods.js","App.tsx","index.tsx"],"names":["App","state","selectedGood","isSelectedDefault","goods","goodsFromServer","isActive","good","find","item","removeItem","setState","prevState","indexFinde","findIndex","splice","clearState","setHeader","lengthSelected","length","selectedWithoutLastElement","lastSelected","pop","join","addeItem","className","this","type","onClick","map","classNames","uniqid","Component","ReactDOM","render","document","getElementById"],"mappings":"8QAAe,GACb,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,U,OCKWA,EAAb,4MACEC,MAAyB,CACvBC,aAAc,CAAC,OACfC,mBAAmB,GAHvB,EAMEC,MANF,YAMwBC,GANxB,EAQEC,SAAW,SAACC,GACV,QAAU,EAAKN,MAAMC,aAAaM,MAAK,SAAAC,GAAI,OAAIA,IAASF,MAT5D,EAYEG,WAAa,SAACH,GAAD,OACX,EAAKI,UAAS,SAACC,GACb,IAAQV,EAAiBU,EAAjBV,aACFW,EAAaX,EAChBY,WAAU,SAAAL,GAAI,OAAIA,IAASF,KAM9B,OAJoB,IAAhBM,GACFX,EAAaa,OAAOF,EAAY,GAG3B,CACLX,aAAa,YAAKA,QAvB1B,EA4BEc,WAAa,WACX,EAAKL,SAAS,CACZT,aAAc,MA9BpB,EAkCEe,UAAY,WACV,IAAMC,EAAiB,EAAKjB,MAAMC,aAAaiB,OAE/C,IAAMD,EACJ,MAAO,oBAGT,GAAuB,IAAnBA,EACF,MAAM,GAAN,OAAU,EAAKjB,MAAMC,aAAa,GAAlC,gBAGF,IAAMkB,EAA0B,YAAO,EAAKnB,MAAMC,cAE5CmB,EAAeD,EAA2BE,MAEhD,MAAM,GAAN,OAAUF,EAA2BG,KAAK,MAA1C,gBAAuDF,EAAvD,kBAjDJ,EAoDEG,SAAW,SAACjB,GACN,EAAKN,MAAME,oBACb,EAAKa,aACL,EAAKL,UAAS,WACZ,MAAO,CACLR,mBAAmB,OAKzB,EAAKQ,UAAS,SAACC,GACb,IAAQV,EAAiBU,EAAjBV,aAER,MAAO,CACLA,aAAa,GAAD,mBAAMA,GAAN,CAAoBK,SAlExC,4CAuEE,WAAU,IAAD,OACP,OACE,uBAAMkB,UAAU,MAAhB,UACE,yBAAQA,UAAU,cAAlB,UACE,oBAAIA,UAAU,aAAd,SACIC,KAAKT,gBAELS,KAAKzB,MAAMC,aAAaiB,QAC1B,wBACEQ,KAAK,SACLF,UAAU,uCACVG,QAAS,kBAAM,EAAKZ,cAHtB,sBAUJ,oBAAIS,UAAU,UAAd,SACGC,KAAKtB,MAAMyB,KAAI,SAAAtB,GAAI,OAClB,qBAEEkB,UAAWK,IACT,OACA,QACA,CAAE,eAAgB,EAAKxB,SAASC,KALpC,UAQGA,EACC,EAAKD,SAASC,GAEZ,wBACEoB,KAAK,SACLF,UAAU,0CACVG,QAAS,WACP,EAAKlB,WAAWH,IAJpB,oBAWA,wBACEoB,KAAK,SACLF,UAAU,0CACVG,QAAS,WACP,EAAKJ,SAASjB,IAJlB,sBArBCwB,mBA5FnB,GAAyBC,aCZzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3add8496.chunk.js","sourcesContent":["export default [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","// import { fromNode } from 'cypress/types/bluebird';\nimport { Component } from 'react';\n// import { render } from 'react-dom';\nimport './App.scss';\nimport uniqid from 'uniqid';\nimport 'bulma/css/bulma.min.css';\n\nimport classNames from 'classnames';\nimport goodsFromServer from './goods';\n\ntype State = {\n  selectedGood: string[];\n  isSelectedDefault: boolean;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGood: ['Jam'],\n    isSelectedDefault: true,\n  };\n\n  goods: string[] = [...goodsFromServer];\n\n  isActive = (good: string) => {\n    return !!(this.state.selectedGood.find(item => item === good));\n  };\n\n  removeItem = (good: string) => (\n    this.setState((prevState) => {\n      const { selectedGood } = prevState;\n      const indexFinde = selectedGood\n        .findIndex(item => item === good);\n\n      if (indexFinde !== -1) {\n        selectedGood.splice(indexFinde, 1);\n      }\n\n      return {\n        selectedGood: [...selectedGood],\n      };\n    })\n  );\n\n  clearState = () => {\n    this.setState({\n      selectedGood: [],\n    });\n  };\n\n  setHeader = (): string => {\n    const lengthSelected = this.state.selectedGood.length;\n\n    if (!(lengthSelected)) {\n      return 'No goods selected';\n    }\n\n    if (lengthSelected === 1) {\n      return `${this.state.selectedGood[0]} is selected`;\n    }\n\n    const selectedWithoutLastElement = [...this.state.selectedGood];\n\n    const lastSelected = selectedWithoutLastElement.pop();\n\n    return `${selectedWithoutLastElement.join(', ')} and ${lastSelected} are selected`;\n  };\n\n  addeItem = (good: string): void => {\n    if (this.state.isSelectedDefault) {\n      this.clearState();\n      this.setState(() => {\n        return {\n          isSelectedDefault: false,\n        };\n      });\n    }\n\n    this.setState((prevState) => {\n      const { selectedGood } = prevState;\n\n      return {\n        selectedGood: [...selectedGood, good],\n      };\n    });\n  };\n\n  render() {\n    return (\n      <main className=\"App\">\n        <header className=\"App__header\">\n          <h1 className=\"App__title\">\n            { this.setHeader() }\n          </h1>\n          {!!(this.state.selectedGood.length) && (\n            <button\n              type=\"button\"\n              className=\"App__clear button is-danger is-light\"\n              onClick={() => this.clearState()}\n            >\n              Clear\n            </button>\n          )}\n        </header>\n\n        <ul className=\"content\">\n          {this.goods.map(good => (\n            <li\n              key={uniqid()}\n              className={classNames(\n                'Good',\n                'level',\n                { 'Good--active': this.isActive(good) },\n              )}\n            >\n              {good}\n              { this.isActive(good)\n                ? (\n                  <button\n                    type=\"button\"\n                    className=\"Good__remove button is-warning is-light\"\n                    onClick={() => {\n                      this.removeItem(good);\n                    }}\n                  >\n                    Remove\n                  </button>\n                )\n                : (\n                  <button\n                    type=\"button\"\n                    className=\"Good__select button is-success is-light\"\n                    onClick={() => {\n                      this.addeItem(good);\n                    }}\n                  >\n                    Select\n                  </button>\n                )}\n\n            </li>\n          ))}\n        </ul>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}